# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "ubuntu/xenial64"

  # 仮想マシン上で動作するWiresharkのGUIを直接使うため，x forwardingする．
  # Ryoma Yasunaga，2018/12/1
  config.ssh.forward_x11 = true

  # 各種ソフトウェアのダウンロード．
  config.vm.provision "shell", inline: <<-SHELL
    apt-get update

    # x11 forwarding関連．
    apt-get install x11-apps

    # WireShark．対話型を回避するために細かい設定が必要．
    DEBIAN_FRONTEND=noninteractive apt-get -y -o Dpkg::Options::="--force-confdef" -o Dpkg::Options::="--force-confold" install wireshark

    # FTPサーバ．外部から書き込み可能な設定に変更．
    apt-get install vsftpd -y
    echo 'write_enable=YES' >> /etc/vsftpd.conf

    # FTPで転送する100MBのダミーファイル．
    dd if=/dev/zero of=tempfile bs=1M count=100

    # Python関連のインストール．
    apt-get install python3-pip python3-dev -y
    pip3 install numpy pandas matplotlib jupyter plotly

    # Jupyter notebookの初期設定．
    jupyter notebook --generate-config -y
    echo 'c = get_config()' >> /home/vagrant/.jupyter/jupyter_notebook_config.py
    echo 'c.IPKernelApp.pylab = "inline"' >> /home/vagrant/.jupyter/jupyter_notebook_config.py
    echo '.NotebookApp.ip = "0.0.0.0"' >> /home/vagrant/.jupyter/jupyter_notebook_config.py
    echo 'c.NotebookApp.password = "sha1:29ac6bb6efc7:2ad859160e205053d36f2d5330415a761e3bd469"' >> /home/vagrant/.jupyter/jupyter_notebook_config.py
    echo 'c.NotebookApp.open_browser = False' >> /home/vagrant/.jupyter/jupyter_notebook_config.py
    echo 'c.NotebookApp.port = 7777' >> /home/vagrant/.jupyter/jupyter_notebook_config.py

    # 輻輳制御アルゴリズムをhtcpに変更．
    echo "reno" > /proc/sys/net/ipv4/tcp_congestion_control

  SHELL

  config.vm.define :guest1 do | guest1 |
    guest1.vm.hostname = "guest1"
    guest1.vm.network :private_network, ip: "192.168.33.10", virtualbox__intnet: "intnet"
  end

  config.vm.define :guest2 do | guest2 |
    guest2.vm.hostname = "guest2"
    guest2.vm.network :private_network, ip: "192.168.33.20", virtualbox__intnet: "intnet"
  end

end
